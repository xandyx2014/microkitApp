{"version":3,"sources":["src/app/pages/recordatorio/form/form.component.html","src/app/pages/recordatorio/recordatorio.page.html","node_modules/uid/dist/index.mjs","src/app/config/env.config.ts","src/app/pages/recordatorio/form/form.component.scss","src/app/pages/recordatorio/form/form.component.ts","src/app/pages/recordatorio/recordatorio-routing.module.ts","src/app/pages/recordatorio/recordatorio.module.ts","src/app/pages/recordatorio/recordatorio.page.scss","src/app/pages/recordatorio/recordatorio.page.ts","src/app/services/notificacion.service.ts","src/app/services/recordatorio.service.ts","src/app/services/storage.service.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"\\n<ion-content>\\n  <form [formGroup]=\\\"myForm\\\" (ngSubmit)=\\\"onSubmit()\\\" class=\\\"ion-no-padding\\\">\\n    <ion-item>\\n      <ion-label position=\\\"\\\">Nota</ion-label>\\n      <ion-input formControlName=\\\"nota\\\" type=\\\"text\\\"></ion-input>\\n    </ion-item>\\n    <ion-item *ngIf=\\\"myForm.get('nota').invalid && myForm.get('nota').touched\\\" lines=\\\"none\\\">\\n      <ion-text color=\\\"danger\\\" class=\\\"form-error\\\">\\n        Tiene q ingresar una nota\\n      </ion-text>\\n    </ion-item>\\n    <ion-item>\\n      <ion-label position=\\\"floating\\\">Fecha Inicial</ion-label>\\n      <ion-datetime  formControlName=\\\"fechaInicial\\\" display-format=\\\"DD.MM.YYYY\\\"></ion-datetime>\\n    </ion-item>\\n    <ion-item *ngIf=\\\"myForm.get('fechaInicial').invalid && myForm.get('fechaInicial').touched\\\" lines=\\\"none\\\">\\n      <ion-text color=\\\"danger\\\" class=\\\"form-error\\\">\\n        Ingrese la fecha\\n      </ion-text>\\n    </ion-item>\\n    <ion-item>\\n      <ion-label position=\\\"floating\\\">Fecha final</ion-label>\\n      <ion-datetime  formControlName=\\\"fechaFinal\\\" display-format=\\\"DD.MM.YYYY\\\"></ion-datetime>\\n    </ion-item>\\n    <ion-item *ngIf=\\\"myForm.get('fechaFinal').invalid && myForm.get('fechaFinal').touched\\\" lines=\\\"none\\\">\\n      <ion-text color=\\\"danger\\\" class=\\\"form-error\\\">\\n        Ingrese la fecha\\n      </ion-text>\\n    </ion-item>\\n    <ion-item>\\n      <ion-label position=\\\"floating\\\">Descripcion <ion-text color=\\\"danger\\\">*</ion-text></ion-label>\\n      <ion-textarea formControlName=\\\"descripcion\\\" maxlength=\\\"100\\\"></ion-textarea>\\n    </ion-item>\\n    <ion-button class=\\\"ion-padding\\\" expand=\\\"full\\\" color=\\\"primary\\\" type=\\\"submit\\\" [disabled]=\\\"myForm.invalid\\\">\\n      Crear\\n    </ion-button>\\n  </form>\\n</ion-content>\\n\"","export default \"<ion-header >\\n  <ion-toolbar color=\\\"light\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-menu-button color=\\\"primary\\\"></ion-menu-button>\\n    </ion-buttons>\\n    <ion-title color=\\\"primary\\\">Recordatorios</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <ng-container *ngIf=\\\"recordatorios.length; else elseTemplate\\\">\\n    <ion-card *ngFor=\\\"let recordatorio of recordatorios\\\" (click)=\\\"presentActionSheet(recordatorio)\\\">\\n      <ion-card-header>\\n        <ion-card-title mode=\\\"md\\\">{{recordatorio.nota | titlecase}}</ion-card-title>\\n        <ion-card-subtitle>Fecha inicial: {{recordatorio.fechaInicial | date:'dd-MM-yyyy hh:mm:ss'}}</ion-card-subtitle>\\n        <ion-card-subtitle>Fecha final: {{recordatorio.fechaFinal | date:'dd-MM-yyyy hh:mm:ss'}}</ion-card-subtitle>\\n        <ion-card-subtitle> \\n          <ng-container *ngIf=\\\"recordatorio.estado; else elseTemplate\\\">\\n            <ion-chip color=\\\"primary\\\" mode=\\\"ios\\\" outline=\\\"true\\\">\\n              <ion-label>Completo</ion-label>\\n              <ion-icon name=\\\"checkmark-outline\\\"></ion-icon>\\n            </ion-chip>\\n          </ng-container>\\n          <ng-template #elseTemplate>\\n            <ion-chip color=\\\"danger\\\" mode=\\\"ios\\\" outline=\\\"true\\\">\\n              <ion-label>Incompleto</ion-label>\\n              <ion-icon name=\\\"close-outline\\\"></ion-icon>\\n            </ion-chip>\\n          </ng-template>\\n          \\n          \\n      </ion-card-subtitle>\\n      </ion-card-header>\\n      <ion-card-content>\\n        {{recordatorio.descripcion}}\\n      </ion-card-content>\\n    </ion-card>\\n  </ng-container>\\n  <ng-template #elseTemplate>\\n    <ion-card>\\n      <ion-card-header>\\n        <ion-card-subtitle>No hay recordatorios aun </ion-card-subtitle>\\n        \\n      </ion-card-header>\\n      <ion-card-content>\\n        <ion-icon style=\\\"font-size: 2em;\\\" name=\\\"sad-outline\\\"></ion-icon>\\n      </ion-card-content>\\n    </ion-card>\\n  </ng-template>\\n  <ion-fab vertical=\\\"bottom\\\" horizontal=\\\"end\\\" slot=\\\"fixed\\\">\\n    <ion-fab-button (click)=\\\"presentModal()\\\">\\n      <ion-icon name=\\\"add\\\"></ion-icon>\\n    </ion-fab-button>\\n  </ion-fab>\\n</ion-content>\\n\"","var IDX=36, HEX='';\nwhile (IDX--) HEX += IDX.toString(36);\n\nexport default function (len) {\n\tvar str='', num = len || 11;\n\twhile (num--) str += HEX[Math.random() * 36 | 0];\n\treturn str;\n}\n","export const URL_STORAGE = '[Storage-Recordatorio] microkit';\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3JlY29yZGF0b3Jpby9mb3JtL2Zvcm0uY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport uid from 'uid';\nimport { StorageService } from 'src/app/services/storage.service';\nimport { NotificacionService } from 'src/app/services/notificacion.service';\nimport { ModalController } from '@ionic/angular';\n@Component({\n  selector: 'app-form',\n  templateUrl: './form.component.html',\n  styleUrls: ['./form.component.scss'],\n})\nexport class FormComponent implements OnInit {\n  myForm: FormGroup;\n  constructor(\n    private fb: FormBuilder,\n    private storageService: StorageService,\n    private notificacionService: NotificacionService,\n    private modalCtrl: ModalController\n  ) { }\n\n  ngOnInit() {\n    this.myForm = this.fb.group({\n      id: [uid()],\n      nota: ['', Validators.required],\n      descripcion: [''],\n      fechaInicial: ['', Validators.required],\n      fechaFinal: ['', Validators.required],\n      estado: [false]\n    });\n  }\n  onSubmit() {\n    const fechaInicial = new Date(this.myForm.value.fechaInicial).toString();\n    const fechaFinal = new Date(this.myForm.value.fechaFinal).toString();\n    console.log(fechaInicial);\n    this.storageService.guardar({\n      ...this.myForm.value,\n      fechaInicial,\n      fechaFinal\n    }).then( () => {\n      this.notificacionService.presentToast('Se ha Creado la nota ');\n    });\n    this.modalCtrl.dismiss();\n    console.log(this.myForm.value);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { RecordatorioPage } from './recordatorio.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: RecordatorioPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class RecordatorioPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { RecordatorioPageRoutingModule } from './recordatorio-routing.module';\n\nimport { RecordatorioPage } from './recordatorio.page';\nimport { FormComponent } from './form/form.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ReactiveFormsModule,\n    RecordatorioPageRoutingModule\n  ],\n  declarations: [RecordatorioPage, FormComponent],\n  entryComponents: [FormComponent]\n})\nexport class RecordatorioPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3JlY29yZGF0b3Jpby9yZWNvcmRhdG9yaW8ucGFnZS5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { StorageService } from 'src/app/services/storage.service';\nimport uid from 'uid';\nimport { Recordatorio } from 'src/app/interface/recordatorio.interface';\nimport { RecordatorioService } from 'src/app/services/recordatorio.service';\nimport { ActionSheetController, ModalController } from '@ionic/angular';\nimport { async } from '@angular/core/testing';\nimport { FormComponent } from './form/form.component';\n@Component({\n  selector: 'app-recordatorio',\n  templateUrl: './recordatorio.page.html',\n  styleUrls: ['./recordatorio.page.scss'],\n})\nexport class RecordatorioPage implements OnInit {\n  recordatorios: Recordatorio[] = [];\n  constructor(\n    private storageService: StorageService,\n    private recordatorioService: RecordatorioService,\n    private modalController: ModalController,\n    private actionSheetController: ActionSheetController\n  ) { }\n\n  async ngOnInit() {\n    // this.recordatorioService.crear();\n    /*await this.storageService.guardar({\n      id: uid(),\n      descripcion: 'lorem ipsn',\n      estado: false,\n      fechaFinal: new Date().toString(),\n      fechaInicial: new Date().toString(),\n      nota: 'esta es una nota titulo'\n    });*/\n    await this.obtenerValores();\n    // this.storageService.borrarPorId('rthtso0uiyq93sygt3jnn0ueyej4j7s3');\n  }\n  obtenerValores() {\n    this.storageService.obtener().then( (value) => {\n      this.recordatorios = value;\n    });\n  }\n  async presentModal() {\n    const modal = await this.modalController.create({\n      component: FormComponent,\n      cssClass: 'my-custom-modal-css'\n    });\n    modal.onDidDismiss().then( () => {\n      this.obtenerValores();\n    });\n    return await modal.present();\n  }\n  async presentActionSheet(data: Recordatorio) {\n    const actionSheet = await this.actionSheetController.create({\n      header: 'Recordatorios',\n      buttons: [\n      {\n        text: 'Completo',\n        icon: 'checkmark-outline',\n        handler: async () => {\n          console.log('Share clicked');\n          this.storageService.cambiarEstado(data.id, true).then( () => {\n             this.obtenerValores();\n          });\n        }\n      },\n      {\n        text: 'Incompleto',\n        icon: 'close-outline',\n        handler: () => {\n          console.log('Share clicked');\n          this.storageService.cambiarEstado(data.id, false).then( () => {\n            this.obtenerValores();\n         });\n        }\n      },\n      {\n        text: 'Borrar',\n        role: 'destructive',\n        icon: 'trash',\n        handler: async () => {\n          await this.storageService.borrarPorId(data.id);\n          await this.obtenerValores();\n        }\n      },\n      {\n        text: 'Cancelar',\n        icon: 'close',\n        role: 'cancel',\n        handler: () => {\n          console.log('Cancel clicked');\n        }\n      }]\n    });\n    await actionSheet.present();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ToastController } from '@ionic/angular';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NotificacionService {\n\n  constructor(\n    private toastController: ToastController\n  ) { }\n  async presentToast(message) {\n    const toast = await this.toastController.create({\n      message,\n      duration: 2000,\n      mode: 'md'\n    });\n    toast.present();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Plugins } from '@capacitor/core';\nconst { LocalNotifications, LocalNotificationScheduleResult } = Plugins;\n@Injectable({\n  providedIn: 'root'\n})\nexport class RecordatorioService {\n\n  constructor() {\n    Plugins.LocalNotifications.addListener('localNotificationReceived', (notification) => {\n      console.log('Notification: ', notification);\n    })\n\n    Plugins.LocalNotifications.addListener('localNotificationActionPerformed', (notification) => {\n      console.log('Notification action performed', notification);\n    });\n  }\n  async crear() {\n    const notify = await Plugins.LocalNotifications.schedule({\n      notifications: [{\n        title: 'Get 10% off!',\n        body: 'Swipe now to learn more',\n        // Get random id to test cancel\n        id: Math.floor(Math.random() * 10),\n        sound: 'beep.aiff',\n        attachments: [\n          { id: 'face', url: 'res://public/assets/ionitron.png' }\n        ],\n        actionTypeId: 'OPEN_PRODUCT',\n        extra: {\n          productId: 'PRODUCT-1'\n        }\n      }]\n    });\n    console.log(notify);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Plugins } from '@capacitor/core';\nimport { URL_STORAGE } from '../config/env.config';\nimport { Recordatorio } from '../interface/recordatorio.interface';\n\nconst { Storage } = Plugins;\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StorageService {\n  url = URL_STORAGE;\n  constructor() { }\n  async guardar(data: Recordatorio) {\n    const recordatorios = await this.obtener();\n    await Storage.set({\n      key: this.url,\n      value: JSON.stringify([\n        ...recordatorios,\n        data\n      ])\n    });\n  }\n  async borrarPorId(id: string) {\n    const recordatorio = await this.obtener();\n    const data = recordatorio.filter( value => value.id !== id);\n    console.log(data);\n    await Storage.set({\n      key: this.url,\n      value: JSON.stringify([\n        ...data,\n      ])\n    });\n  }\n  async cambiarEstado(id: string, estado: boolean) {\n    const recordatorios = await this.obtener();\n    const recordatorioUpdate = recordatorios.filter(value => value.id === id)[0];\n    const data = recordatorios.filter( value => value.id !== id);\n    await Storage.set({\n      key: this.url,\n      value: JSON.stringify([ {...recordatorioUpdate, estado}, ...data])\n    });\n  }\n  async obtener(): Promise<any[]> {\n    const ret = await Storage.get({ key: this.url });\n    const body = JSON.parse(ret.value);\n    if (typeof body === 'undefined' || body === null) {\n       return [];\n    }\n    return body;\n  }\n}\n"],"sourceRoot":"webpack:///","file":"pages-recordatorio-recordatorio-module-es5.js"}